@model ViewModels.JobApplicationViewModel

@{
    ViewBag.Title = "jobApplicationForm";

    
        Layout = "~/Areas/CandidatePortal/Views/Shared/_Layout.cshtml";
    
}
<style>


    .stickybtn {
        /*position: fixed;*/
    }

 
</style>



<div class="row ">
    
    <div class="col-md-12 grid-margin ">

        @using (Ajax.BeginForm("jobApplicationForm",
            new { Controller = "CandidateForm", area = "Recruiter", @enctype = "multipart/form-data" },
            new AjaxOptions { OnFailure = "OnJobFailure", OnSuccess = "OnJobSubmit", OnBegin = "BeginRequest", LoadingElementId = "PostLoader" }
            ))
        {
            @Html.HiddenFor(m => m.CandidateViewModel.CandidateInfo.Id);
            

        <div class="row">
            @*<div class="row">
                <div class="col-md-2">
                    <input type="submit" name="name" value="Update" class="btn btn-primary topbutton" />
                </div>
            </div>*@
            


            <!--        Personal Information-->
            <div class="row">
                <div class="card">
                    <div class="card-header">

                        Personal Information
                    </div>
                    <div class="card-body">

                        <div class="form-group row " id="JobApplicationForm">

                            <h3 style="text-decoration:underline"> Job Application Form</h3>

                            @*@Html.ValidationSummary(false, "", new { @class = "text-danger" })*@

                            <div class="col">
                                <label>Name <span class="text-danger">*</span> </label>
                                <div id="the-basics">

                                    @Html.TextBoxFor(m => m.CandidateViewModel.CandidateName, new { @class = "typeahead validateTextOnly", placeholder = "Candidate Name" })





                                </div>
                            </div>
                            <div class="col-md-2">
                                <label>Fathers Name <span class="text-danger">*</span></label>
                                <div id="the-basics1">
                                    @*<input class="typeahead" type="text" placeholder="First Name" >*@

                                    @Html.TextBoxFor(m => m.CandidateViewModel.FathersName, new { @class = "typeahead validateTextOnly", placeholder = "Father name" })

                                    @Html.ValidationMessageFor(m => m.CandidateViewModel.FathersName, null, new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col">
                                <label>Marital Status <span class="text-danger">*</span></label>
                                <div id="the-basics2">


                                    @Html.DropDownListFor(m => m.CandidateViewModel.MaritalStatus, new SelectList(ViewBag.MartialStatusDropDown, "Value", "Text"), new { @class = " aaDropdownStyle", @Id = "DrpDesig" })

                                    @Html.ValidationMessageFor(m => m.CandidateViewModel.MaritalStatus, null, new { @class = "text-danger" })

                                </div>
                            </div>


                            <div class="col">
                                <label>Date Of Birth <span class="text-danger">*</span></label>
                                <div id="the-basics2">

                                    <div id="dobDate" class="input-group date">
                                        @Html.TextBoxFor(Model => Model.CandidateViewModel.DOB, "{0:dd-MMM-yyyy}",
    new { @class = "typeahead", placeholder = "DOB" })

                                        <span class="input-group-addon input-group-append border-left">
                                            <span class="ti-calendar input-group-text"></span>
                                        </span>

                                    </div>
                                    @Html.ValidationMessageFor(m => m.CandidateViewModel.DOB, null, new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                        <div class="form-group row ">

                            <div class="col-md-2">
                                <label>Nationality </label>
                                <div id="the-basics">
                                    @Html.TextBoxFor(m => m.CandidateViewModel.Nationality, new { @class = "typeahead validateTextOnly", placeholder = "Nationality" })
                                    @Html.ValidationMessageFor(m => m.CandidateViewModel.Nationality, null, new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-2">
                                <label>Religion </label>
                                <div id="bloodhound">
                                    @Html.TextBoxFor(m => m.CandidateViewModel.Religion, new { @class = "typeahead validateTextOnly", placeholder = "Religion" })
                                    @Html.ValidationMessageFor(m => m.CandidateViewModel.Religion, null, new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col-md-4">
                                <label>CNIC No  </label>
                                <div id="bloodhound">

                                    @*<input class="typeahead" type="text" placeholder="First Name" >*@
                                    @Html.TextBoxFor(m => m.CandidateViewModel.CNIC, new { @class = "typeahead CNICInputMask", placeholder = "CNIC" })

                                    @Html.ValidationMessageFor(m => m.CandidateViewModel.CNIC, null, new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="col-md-4">
                                <label>Expiry Date </label>
                                <div id="bloodhound">

                                    <div id="dobDate" class="input-group date datepicker ">
                                        @Html.TextBoxFor(Model => Model.CandidateViewModel.ExpiryDate, "{0:dd-MMM-yyyy}",
    new { @class = "typeahead datepickerfuture", placeholder = "CNIC" })

                                        <span class="input-group-addon input-group-append border-left">
                                            <span class="ti-calendar input-group-text"></span>
                                        </span>
                                    </div>

                                    @Html.ValidationMessageFor(m => m.CandidateViewModel.ExpiryDate, null, new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                        <div class="form-group row ">

                            <div class="col-md-2">
                                <label>Contact No </label>
                                <div id="the-basics">

                                    @*<input class="typeahead" type="text" placeholder="First Name" >*@

                                    @Html.TextBoxFor(m => m.CandidateViewModel.ContactNo, new { @class = "typeahead validatenumeric", placeholder = "Contact" })


                                </div>
                            </div>
                            <div class="col-md-4">
                                <label>Contact No Office </label>
                                <div id="bloodhound">


                                    @Html.TextBoxFor(m => m.CandidateViewModel.ContactNoOffice, new { @class = "typeahead validatenumeric", placeholder = "Contact Office" })

                                </div>
                            </div>


                            <div class="col-md-2">
                                <label>Mobile No  </label>
                                <div id="bloodhound">


                                    @Html.TextBoxFor(m => m.CandidateViewModel.MobileNo, new { @class = "typeahead MobileNoMask", placeholder = "Mobile No" })
                                    @Html.ValidationMessageFor(m => m.CandidateViewModel.MobileNo, null, new { @class = "text-danger" })


                                </div>
                            </div>


                            <div class="col-md-4">
                                <label>Email Address </label>
                                <div id="bloodhound">


                                    @Html.TextBoxFor(m => m.CandidateViewModel.EmailAddress, new { @class = "typeahead validateemail", placeholder = "Email Address" })
                                    @Html.ValidationMessageFor(m => m.CandidateViewModel.EmailAddress, null, new { @class = "text-danger" })



                                </div>
                            </div>

                        </div>



                        <br />
                        <div class="row">
                            <div class="col-md-6">
                                <label for="">Present Address</label>
                                @Html.TextBoxFor(m => m.CandidateViewModel.PresentAddress, new { @class = "typeahead ", placeholder = "Address" })
                            </div>
                            <div class="col-md-6">
                                <label for="">Permanant Address</label>
                                @Html.TextBoxFor(m => m.CandidateViewModel.CandidateAddress, new { @class = "typeahead ", placeholder = "Address" })
                                @Html.ValidationMessageFor(m => m.CandidateViewModel.CandidateAddress, null, new { @class = "text-danger" })


                            </div>

                        </div>


                    </div>
                </div>
            </div>

            <!--        Personal Information-->
            <!-- Academic/Professional Qualification-->
            <div class="row">
                <div class="card">
                    <div class="card-header">

                        Academic/Professional Qualification


                    </div>
                    <div id="test-block" class="">
                        <div class="card-body ">

                            @Html.Partial("~/Areas/Recruiter/Views/Shared/_Education.cshtml", Model.CandidateViewModel)






                        </div>
                    </div>

                </div>

            </div>
            <!-- Academic/Professional Qualification-->
            <!-- Roficiency of Languages-->
            <div class="card">
                <div class="card-header">
                    Roficiency of Languages
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-responsive" border="1">
                            <thead class="text-center">
                                <tr>
                                    <th class="pt-1 ps-0 text-center" rowspan="2">
                                        Language
                                    </th>

                                    @foreach (var item in Model.LanguageMapings.Select(m => new { ScoreType = m.LangScoreType }).OrderBy(m => m.ScoreType.TypeName).Distinct())
                                    {

                                        var col = Model.LanguageMapings.Select(m => new
                                        {
                                            Score = m.LanguageScore,
                                            ScoreType = m.LangScoreType
                                        }).Distinct().Count();

                                        var ScoreType = Model.LanguageMapings.Select(m => new { ScoreType = m.ScoreTypeId }).Distinct().Count();


                                        var colspanvalue = col / ScoreType;

                                        <text>
                                            <th colspan="@colspanvalue" style="border-right-width: 2px !important; border-left-width: 2px !important;">@item.ScoreType.TypeName</th>
                                        </text>



                                    }


                                </tr>
                                <tr>

                                    @foreach (var item in Model.LanguageMapings.Select(m => new { Score = m.LanguageScore, ScoreType = m.LangScoreType }).Distinct().OrderBy(m => m.ScoreType.TypeName))
                                    {
                                        var test = Model.LanguageMapings.Select(m => new { Score = m.LanguageScore, ScoreType = m.LangScoreType }).Distinct();

                                        <th style="border-left-width: 1px;">@item.Score.ScoreName</th>
                                    }


                                </tr>
                            </thead>

                            <tbody>

                                @{
                                    int lcount = 0;
                                    foreach (var item in Model.LanguageMapings.Select(m => m.Language).Distinct())
                                    {
                                        <tr class="text-center">

                                            <td style="padding: 0px;">
                                                <span>
                                                    @item.LanguageName
                                                    @if (item.isTextboxOpen == true)
                                                    {


                                                        var textboxname = "radiobutton[" + lcount + "].name";

                                                        var testboxvalue = Model.candLang.Where(m => m.LanguageMaping.langgId == item.Id).FirstOrDefault();

                                                        var value = testboxvalue != null ? testboxvalue.LangValue : "";

                                                        <input type="text" value="@value" name="@textboxname" class="typeahead" style="max-width: 150px; margin: auto; margin-top: 10px;margin-bottom:10px;" required />

                                                    }
                                                </span>
                                            </td>
                                            @foreach (var item1 in Model.LanguageMapings.Where(m => m.langgId == item.Id).Select(m => new { langid = m.langgId, scoreTypeId = m.ScoreTypeId, ScoreType = m.LangScoreType }).OrderBy(m => m.ScoreType.TypeName).Distinct())
                                            {

                                                var count = Model.LanguageMapings.Where(m => m.langgId == item1.langid).Distinct().Count();
                                                var scoreTypeName = item1.ScoreType.TypeName;
                                                foreach (var item2 in Model.LanguageMapings.Where(m => m.langgId == item1.langid && m.ScoreTypeId == item1.scoreTypeId).OrderBy(m => m.LangScoreType.TypeName).Select(m => new { ScoreTypeId = m.ScoreId, ScoreName = m.LanguageScore.ScoreName }).Distinct())
                                                {






                                                    var radioName = "radiobutton[" + lcount + "].Answer";

                                                    var MapId = Model.LanguageMapings.Where(m => m.langgId == item1.langid && m.ScoreTypeId == item1.scoreTypeId && m.ScoreId == item2.ScoreTypeId).Select(m => m.Id).FirstOrDefault();
                                                    var LangName = Model.LanguageMapings.Where(m => m.langgId == item1.langid && m.ScoreTypeId == item1.scoreTypeId && m.ScoreId == item2.ScoreTypeId).Select(m => m.Language.LanguageName).FirstOrDefault();


                                                    <td style="border-left-width: 1px;">


                                                        @{var LangRequiredmessage = "Please select " + scoreTypeName + "-" + LangName + " language proficiency.";

                                                        }

                                                        @if (Model.candLang.Where(m => m.LangMapId == MapId).Count() > 0)
                                                        {


                                                            <input type="radio" name="@radioName" value="@MapId" required checked="checked" data-val="true" data-val-required="@LangRequiredmessage" />
                                                        }
                                                        else
                                                        {
                                                            <input type="radio" name="@radioName" value="@MapId" required data-val="true" data-val-required="@LangRequiredmessage" />
                                                        }



                                                    </td>
                                                }
                                                lcount = lcount + 1;


                                            }

                                        </tr>
                                    }

                                }




                            </tbody>
                        </table>

                    </div>

                </div>
            </div>
            <!-- Roficiency of Languages-->
            <!--Previous Employement Start-->
            <div class="card">
                <div class="card-header">
                    Professional Information
                </div>
                <div class="card-body">
                    <div class="card">
                        <div class="card-header">
                            Preset/Most Recent Employement
                        </div>
                        <div class="card-body border">
                            <div class="row">
                                <div class="col-md-6">
                                    @Html.HiddenFor(m => m.MostRecentEmployment.Id)
                                    <label>Company Name & Address </label>
                                    <div id="bloodhound">
                                        @Html.TextBoxFor(m => m.MostRecentEmployment.CompanyNameAddress, new { @class = "typeahead", placeholder = "Company Name & Address" })

                                    </div>

                                    <label>Present / Most Recent Position </label>
                                    <div id="bloodhound">
                                        @Html.TextBoxFor(m => m.MostRecentEmployment.PresentRecentPosition, new { @class = "typeahead validateTextOnly", placeholder = "Present / Most Recent Position " })
                                    </div>

                                    <div>
                                        <label>Position (at the time of joining) </label>
                                        <div id="bloodhound">
                                            @Html.TextBoxFor(m => m.MostRecentEmployment.StartingPosition, new { @class = "typeahead validateTextOnly", placeholder = "Position (at the time of joining)  " })

                                        </div>
                                        <label>Date of joining (dd-mm-yyyy)</label>


                                        <div class="input-group date datepicker">

                                            @Html.TextBoxFor(m => m.MostRecentEmployment.DateOfJoining, "{0:dd-MMM-yyyy}", new { @class = "typeahead datepicker", placeholder = "Date of Joining  " })

                                            <span class="input-group-addon input-group-append border-left">
                                                <span class="ti-calendar input-group-text"></span>
                                            </span>
                                        </div>



                                    </div>

                                </div>
                                <div class="col-md-6">
                                    <div class="row">
                                        <h4>Salary & Benifits</h4>

                                        <div class="col-md-4  ">
                                            <label>Gross Salary</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(m => m.MostRecentEmployment.GrossSalary, new { @class = "typeahead validateCurrency", placeholder = "Gross Salary " })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4  ">
                                            <label>Gratuity</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(m => m.MostRecentEmployment.Gratuity, new { @class = "typeahead", placeholder = "Answer in YES/NO or Amount " })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4  ">
                                            <label>Bonus/Incentive</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(m => m.MostRecentEmployment.BonusIncentive, new { @class = "typeahead", placeholder = "Answer in YES/NO or Amount" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4  ">
                                            <label>Leave Encashment</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(m => m.MostRecentEmployment.LeaveEncashment, new { @class = "typeahead", placeholder = "Answer in YES/NO or Amount" })

                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4  ">
                                            <label>Fuel Allowance</label>
                                        </div>
                                        <div class="col-md-6">
                                            @*<input class="typeahead" type="text" placeholder="Company Name & Address">*@
                                            @Html.TextBoxFor(m => m.MostRecentEmployment.FuelAllowance, new { @class = "typeahead", placeholder = "Answer in YES/NO or Amount" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4  ">
                                            <label>Vehicle</label>
                                        </div>
                                        <div class="col-md-6">

                                            @Html.TextBoxFor(m => m.MostRecentEmployment.Vehicle, new { @class = "typeahead", placeholder = "Answer in YES/NO or Amount" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4  ">
                                            <label>Others</label>
                                        </div>
                                        <div class="col-md-6">
                                            @Html.TextBoxFor(m => m.MostRecentEmployment.Other, new { @class = "typeahead", placeholder = "Answer in YES/NO or Amount" })
                                        </div>

                                    </div>


                                </div>
                            </div>
                        </div>
                    </div>

                    <!--Previous Employement Start-->
                    <div class="card">
                        <div class="card-header">
                            Previous Employement (Last Employment First) other than Above
                        </div>
                        <div class="card-body border">

                            @*<form id="SaveExperiencedata" enctype="multipart/form-data">*@

                            @Html.Partial("~/Areas/Recruiter/Views/Shared/_Experience.cshtml", Model.CandidateViewModel)
                            @*</form>*@

                        </div>
                    </div>
                    <!--Previous Employement End-->


                </div>
            </div>
            <!--Previous Employement End-->
            <!--General Information Start-->
            <div class="card">
                <div class="card-header">
                    General Information
                </div>
                <div class="card-body border">
                    <div class="row">

                        <p>Do you have any relate/freind working ar Artistic Milliners Pvt Ltd?</p>
                        <p>
                            @Html.RadioButtonFor(m => m.CandidateViewModel.IsRelateFreindWorking, "True") Yes
                            @Html.RadioButtonFor(m => m.CandidateViewModel.IsRelateFreindWorking, "False") NO

                            @Html.ValidationMessageFor(m => m.CandidateViewModel.IsRelateFreindWorking, null, new { @class = "text-danger" })
                            @*<input type="radio" name="ChkFrndatAM" /> Yes <input type="radio" name="ChkFrndatAM" /> No*@

                        </p>

                        <div class="row">

                            @{
                                int loopexecute = Model.Cand_RelateFreindWorking == null ? 2 : Model.Cand_RelateFreindWorking.Count();

                                for (int ii = 0; ii < loopexecute; ii++)
                                {

                                    @Html.HiddenFor(m => m.Cand_RelateFreindWorking[ii].Id);
                                    @Html.HiddenFor(m => m.Cand_RelateFreindWorking[ii].UserId, new { @values = BAL.GlobalUserInfo.UserId.ToString() });
                                    //Model.Cand_RelateFreindWorking[ii].UserId = Convert.ToInt32(System.Web.HttpContext.Current.Session["UserId"].ToString());
                                    <div class="col-md-1">
                                        <label>Name </label>
                                    </div>
                                    <div class="col-md-3">
                                        <div id="bloodhound">

                                            @Html.TextBoxFor(m => m.Cand_RelateFreindWorking[ii].RefereeName, new { @class = "typeahead validateTextOnly", placeholder = "Name " + (ii + 1) + "" })
                                        </div>
                                    </div>
                                    <div class="col-md-1">
                                        <label>Relation </label>
                                    </div>
                                    <div class="col-md-3">
                                        <div id="bloodhound">
                                            @Html.TextBoxFor(m => m.Cand_RelateFreindWorking[ii].Relation, new { @class = "typeahead", placeholder = "Relation validateTextOnly " + (ii + 1) + "" })
                                        </div>
                                    </div>

                                    <div class="col-md-1">
                                        <label>Department </label>
                                    </div>
                                    <div class="col-md-3">
                                        <div id="bloodhound">
                                            @Html.TextBoxFor(m => m.Cand_RelateFreindWorking[ii].Department, new { @class = "typeahead", placeholder = "Department validateTextOnly" + (ii + 1) + "" })
                                        </div>
                                    </div>


                                }


                            }









                        </div>





                    </div>
                    <hr />
                    <div class="row">

                        <p>Have you have previously worked at Artistic Milliners Pvt Ltd?</p>
                        @Html.HiddenFor(m => m.Cand_AMPreviousWork.Id)
                        <p>
                            @Html.RadioButtonFor(m => m.CandidateViewModel.PreviouslyWork, "True") Yes
                            @Html.RadioButtonFor(m => m.CandidateViewModel.PreviouslyWork, "False") NO
                        </p>

                        @Html.ValidationMessageFor(m => m.CandidateViewModel.PreviouslyWork, null, new { @class = "text-danger" })

                        <div class="row">

                            <div class="col-md-3">
                                <div id="bloodhound">
                                    Position
                                    @Html.TextBoxFor(m => m.Cand_AMPreviousWork.PositionName, new { @class = "typeahead validateTextOnly", placeholder = "Position" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                Department
                                <div id="bloodhound">
                                    @Html.TextBoxFor(m => m.Cand_AMPreviousWork.Department, new { @class = "typeahead validateTextOnly", placeholder = "Department" })
                                </div>
                            </div>


                            <div class="col-md-2">
                                Unit
                                <div id="bloodhound">
                                    @Html.TextBoxFor(m => m.Cand_AMPreviousWork.Unit, new { @class = "typeahead", placeholder = "Unit" })
                                </div>
                            </div>


                            <div class="col-md-2">
                                From
                                <div id="dobDate" class="input-group date datepicker">

                                    @Html.TextBoxFor(m => m.Cand_AMPreviousWork.Fromdate, "{0:dd-MMM-yyyy}", new { @class = "typeahead", placeholder = "Fromdate" })


                                    <span class="input-group-addon input-group-append border-left">
                                        <span class="ti-calendar input-group-text"></span>
                                    </span>
                                </div>

                            </div>

                            <div class="col-md-2">
                                To

                                <div id="dobDate" class="input-group date datepicker">

                                    @Html.TextBoxFor(m => m.Cand_AMPreviousWork.Todate, "{0:dd-MMM-yyyy}", new { @class = "typeahead", placeholder = "Todate" })


                                    <span class="input-group-addon input-group-append border-left">
                                        <span class="ti-calendar input-group-text"></span>
                                    </span>
                                </div>
                            </div>

                        </div>

                    </div>


                    <hr />

                    <div class="row">
                        <p><strong>Reference(Specify reference detail below other than your relatives)</strong></p>
                        @for (int r1 = 0; r1 < 2; r1++)
                        {
                            @Html.HiddenFor(m => m.Cand_ProfessionalReferences[r1].Id)
                            <div class="col-md-6">

                                <div class="row">


                                    <div class="col-md-4  ">
                                        <label>Name</label>
                                    </div>
                                    <div class="col-md-6">
                                        @*<input class="typeahead" type="text" placeholder="Company Name & Address">*@
                                        @Html.TextBoxFor(m => m.Cand_ProfessionalReferences[r1].Refname, new { @class = "typeahead validateTextOnly", @placeholder = "Company Name & Address" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4  ">
                                        <label>Relationship</label>
                                    </div>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(m => m.Cand_ProfessionalReferences[r1].RefRelation, new { @class = "typeahead validateTextOnly", @placeholder = "Relationship" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4  ">
                                        <label>Address</label>
                                    </div>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(m => m.Cand_ProfessionalReferences[r1].RefAddress, new { @class = "typeahead", @placeholder = "Address" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4  ">
                                        <label>Contact No</label>
                                    </div>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(m => m.Cand_ProfessionalReferences[r1].RefContact, new { @class = "typeahead MobileNoMask", @placeholder = "Contact No" })
                                    </div>
                                </div>



                            </div>
                        }



                    </div>

                    <hr />
                    <div class="row">
                        <div class="col-md-12">
                            <div id="bloodhound">
                                <p><strong>Health</strong> (Mention any disablity, serius illness or operation, which you had )</p>
                                @Html.TextBoxFor(m => m.CandidateViewModel.HealthIssue, new { @class = "typeahead", placeholder = "HealthIssue" })
                            </div>
                        </div>
                    </div>


                </div>
            </div>
            <!--General Information End-->
            <!--Other Detail Start-->
            <div class="card">
                <div class="card-header">
                    Previous Employement (Last Employment First) other than Above
                </div>
                <div class="card-body border">
                    <div class="row">

                        <div class="col-md-3">
                            <label>Passport No:  </label>
                            <div id="bloodhound">


                                @Html.TextBoxFor(m => m.CandidateViewModel.PassportNo, new { @class = "typeahead", placeholder = "PassportNo" })
                            </div>
                        </div>

                        <div class="col-md-3">
                            <label>Expiry Date  </label>
                            <div id="bloodhound">

                                <div class="input-group date datepicker">

                                    @Html.TextBoxFor(m => m.CandidateViewModel.PasExpiryDate, "{0:dd-MMM-yyyy}", new { @class = "typeahead", placeholder = "Expiry Date" })



                                    <span class="input-group-addon input-group-append border-left">
                                        <span class="ti-calendar input-group-text"></span>
                                    </span>
                                </div>
                            </div>
                        </div>


                        <div class="col-md-3">
                            <label>Driving License No:  </label>
                            <div id="bloodhound">

                                @Html.TextBoxFor(m => m.CandidateViewModel.DrivingLicenseNo, new { @class = "typeahead", placeholder = "Driving License No" })


                            </div>
                        </div>


                        <div class="col-md-3">
                            <label>Expiry Date:  </label>
                            <div id="bloodhound">

                                <div class="input-group date datepicker">

                                    @Html.TextBoxFor(m => m.CandidateViewModel.DrlExpiryDate, "{0:dd-MMM-yyyy}", new { @class = "typeahead", placeholder = "Driving Expiry Date" })



                                    <span class="input-group-addon input-group-append border-left">
                                        <span class="ti-calendar input-group-text"></span>
                                    </span>
                                </div>







                            </div>
                        </div>

                        <div class="col-md-3">
                            <label>NTN No: </label>
                            <div id="bloodhound">

                                @Html.TextBoxFor(m => m.CandidateViewModel.NtnNo, new { @class = "typeahead", placeholder = "NTN No" })

                            </div>
                        </div>

                        <div class="col-md-3">
                            <label>EOBI No</label>
                            <div id="bloodhound">

                                @Html.TextBoxFor(m => m.CandidateViewModel.EOBI, new { @class = "typeahead", placeholder = "EOBI No" })


                            </div>
                        </div>


                        <div class="col-md-3">
                            <label>Gender  </label>
                            <div id="bloodhound">

                                @Html.DropDownListFor(m => m.CandidateViewModel.Gender, new SelectList(ViewBag.GenderDropDown, "Value", "Text"), new { @class = " aaDropdownStyle", @Id = "" })


                            </div>
                        </div>


                        <div class="col-md-3">
                            <label>Blood Group:  </label>
                            <div id="bloodhound">
                                @Html.TextBoxFor(m => m.CandidateViewModel.Bloodgroup, new { @class = "typeahead", placeholder = "Blood Group" })


                            </div>
                        </div>


                    </div>

                    <hr />
                    <p><strong>Details of Dependants: (i.e Parents, spouse &Aacute; Kids etc.)</strong></p>
                    <div class="table-responsive">
                        <table class="table table-responsive" border="1" id="tableDependants">
                            <thead>
                                <tr>
                                    <th class="pt-1 ps-0 text-center">
                                        Name
                                    </th>
                                    <th class="pt-1 text-center">
                                        Date Of Birth
                                    </th>
                                    <th class="pt-1 text-center">
                                        CNIC No / Birth Certificate
                                    </th>
                                    <th class="pt-1 text-center">
                                        Type
                                    </th>

                                    <th class="pt-1 text-center">
                                        Action
                                    </th>



                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int i = 0;
                                    do
                                    {
                                        //var fieldName = "Cand_Dependants[" + i + "]." + Model.Cand_Dependants.Select(m=>m.CNIC);
                                        var FieldDependantName = "Cand_Dependants[" + i + "].Dependantname";
                                        var FieldCNICName = "Cand_Dependants[" + i + "].CNIC";
                                        var FieldDOBName = "Cand_Dependants[" + i + "].DOB";

                                        <tr class="text-center tr_clone">
                                            @Html.HiddenFor(m => m.Cand_Dependants[i].Id)
                                            @Html.HiddenFor(m => m.Cand_Dependants[i].UserId)
                                            <td>
                                                @*<input type="text" name="@FieldDependantName" value="" class="form-control" />*@
                                                @Html.TextBoxFor(m => m.Cand_Dependants[i].Dependantname, new { @class = "form-control  validateTextOnly" })
                                            </td>
                                            <td>

                                                @*div class="input-group date datepicker">*@

                                                @*<input type="date" name="@FieldDOBName" value="" class="form-control " />*@

                                                @Html.TextBoxFor(m => m.Cand_Dependants[i].DOB, new { @class = "form-control" })

                                                <!--<div id="" class="input-group date ">-->
                                                @*@Html.TextBoxFor(m => m.Cand_AMPreviousWork.Fromdate, "{0:dd-MMM-yyyy}", new { @class = "typeahead", placeholder = "Fromdate" })*@

                                                <!--@Html.TextBoxFor(m => m.Cand_Dependants[i].DOB, "{0:dd-MMM-yyyy}", new { @class = "form-control pastdate", @Id = "" })

                                            <span class="input-group-addon input-group-append border-left">
                                                <span class="ti-calendar input-group-text"></span>
                                            </span>
                                        </div>-->
                                                @*</div>*@

                                            </td>
                                            <td>
                                                @*<input type="text" name="@FieldCNICName" value="" class="form-control CNICInputMask " />*@
                                                @Html.TextBoxFor(m => m.Cand_Dependants[i].CNIC, new { @class = "form-control CNICInputMask" })

                                            </td>
                                            <td>
                                                @Html.DropDownListFor(m => m.Cand_Dependants[i].RelationType, new SelectList(ViewBag.DependantsDropDown, "Value", "Text"), new { @class = " aaDropdownStyle" })

                                            </td>

                                            <td class="tblDplAction">
                                                <button type="button" class="btn btn-sm btn-primary addDynamicRow">Add Row</button>
                                                <button type="button" class="btn btn-sm btn-danger removeDynamicRow">Delete Row</button>
                                            </td>

                                        </tr>
                                        i++;

                                    } while (i < (Model.Cand_Dependants == null ? 0 : Model.Cand_Dependants.Count));
                                }








                            </tbody>
                        </table>

                    </div>
                </div>
            </div>
            <!--Other Detail End-->
            <!--Declaration Start-->
            <div class="card">
                <div class="card-header">
                    Declarations
                </div>
                <div class="card-body border">
                    <div class="row">
                        <p>
                            I hereby declare that the information given in this application is true and correct to the best of my knowledge and belief. In case any information given in this application proves to be false or incorrect, I shall be responsible for the consequences
                        </p>


                    </div>
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <input type="submit" name="name" value="Update" class="btn btn-primary stickybtn" />

                    <div class="loading" id="PostLoader">Loading&#8230;</div>
                </div>
            </div>
            <!--DeclarationEnd-->
        </div>
            <!--To be Filled by HR Start-->
            @*<div class="card">
                <div class="card-header">
                    To be Filled by HR (For Official Use Only)
                </div>
                <div class="card-body border">
                    <div class="row">
                        <div class="col-md-6">

                            <div class="row">


                                <div class="col-md-4  ">
                                    <label>Date fof Appointment</label>
                                </div>
                                <div class="col-md-6">
                                    <input class="typeahead" type="text" placeholder="Company Name & Address">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4  ">
                                    <label>Grade</label>
                                </div>
                                <div class="col-md-6">
                                    <input class="typeahead" type="text" placeholder="Company Name & Address">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4  ">
                                    <label>Department</label>
                                </div>
                                <div class="col-md-6">
                                    <input class="typeahead" type="text" placeholder="Company Name & Address">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4  ">
                                    <label> Emp Code</label>
                                </div>
                                <div class="col-md-6">
                                    <input class="typeahead" type="text" placeholder="Company Name & Address">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4  ">
                                    <label>Car Allowance</label>
                                </div>
                                <div class="col-md-6">
                                    <input class="typeahead" type="text" placeholder="Company Name & Address">
                                </div>
                            </div>

                        </div>
                        <div class="col-md-6">
                            <div class="row">


                                <div class="col-md-4  ">
                                    <label>Designation</label>
                                </div>
                                <div class="col-md-6">
                                    <input class="typeahead" type="text" placeholder="Company Name & Address">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4  ">
                                    <label>Division</label>
                                </div>
                                <div class="col-md-6">
                                    <input class="typeahead" type="text" placeholder="Company Name & Address">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4  ">
                                    <label>Unit</label>
                                </div>
                                <div class="col-md-6">
                                    <input class="typeahead" type="text" placeholder="Company Name & Address">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4  ">
                                    <label>Taxable Salary</label>
                                </div>
                                <div class="col-md-6">
                                    <input class="typeahead" type="text" placeholder="Company Name & Address">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4  ">
                                    <label>Car/Bike</label>
                                </div>
                                <div class="col-md-6">
                                    <input class="typeahead" type="text" placeholder="Company Name & Address">
                                </div>
                            </div>



                        </div>
                    </div>
                </div>
            </div>*@
            <!--To be Filled by HR End-->
        }
    </div>
</div>



<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>


<script>


    $(document).ready(function () {
        $('.RichTextJobDescription').summernote();
        $('.loading').hide();
    });





    function OnJobSubmit(data) {




        ShowToaster(1, "Job Application Form Updated Successfully!", "Job Application!");

    }


    function OnJobFailure(data) {
        ShowToaster(1, "Something wrong please inform to I.T Department!", "Error Occured");
    }

    function BeginRequest() {

    }



    function sticky_relocate_left() {
        var window_top = $(window).scrollTop();
        var div_top = $('#sticky-anchor').offset().top;
        if (window_top > div_top) {
            $('.left').addClass('mobile-sticky');
        } else {
            $('.left').removeClass('mobile-sticky');
        }
    }

   
//end sticky button

</script>


